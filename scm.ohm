scm {
 Main = Item+
 Item =
   | "(" sym<"define"> "(" FunctionName Arg* ")" ListOrAtom ")" -- function
   | "(" sym<"define"> Atom ListOrAtom ")" -- var
   | comment -- comment
   | number -- number
   | string -- string
   | List -- toplevel

  List = "(" ListOrAtom* ")"
  ListOrAtom =
    | "(" sym<"null?"> ListOrAtom ")" -- nullp
    | "(" sym<"string=?"> ListOrAtom ListOrAtom")" -- stringeq
    | "(" sym<"let"> "(" LetBinding+ ")" Body ")" -- let
    | List -- list
    | number -- number
    | string -- string
    | Atom -- atom
  Atom = "❲" upto<"❳">
  bracket = "❲" | "❳"
  sq = "'"

  LetBinding = "(" Atom ListOrAtom ")"
  Body = ListOrAtom

  sym<s> = "❲" s "❳"
  comment = "⌈" upto<"⌉">
  number = digit+
  string = bq upto<eq>
  bq = "“"
  eq = "”"

  upto<x> = (~x any)* x

  space += comment

  FunctionName = Atom
  Arg = Atom
  
}
